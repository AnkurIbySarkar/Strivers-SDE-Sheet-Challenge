#include <iostream>
#include <vector>
using namespace std;
void dfs(int node, vector < int > & vis, stack < int > & st, vector < int > adj[]){
    vis[node]=1;
    for(auto it:adj[node]){
        if(!vis[it]){
            dfs(it,vis,st,adj);
        }
    }
    st.push(node);
} 
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // Write your code here
    vector<int> Vis(v+1,0);
    vector<int> adj[v+1];
    for(auto it:edges){
        adj[it[0]].push_back(it[1]);
    }
    stack<int> st;
    for(int i=0;i<v;i++){
        if(!Vis[i]){
            dfs(i,Vis,st,adj);
        }
    }
    vector<int>ans;
    while(!st.empty()){
        int node = st.top();
        st.pop();
        ans.push_back(node);
    }
    return ans;
}